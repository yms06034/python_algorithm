"""
프로그램에서 발생하는 문법, 논리 오류를 찾아 바로잡는 과정을 디버깅이라고 합니다.

문법 오류 : 컴파일러가 자동으로 찾아 주므로 테스트 할 때 문제가 되지 않음
논리 오류 : 코드가 사용자의 의도와 다르게 동작하는 것이며 다양한 형태로 발생

많은 사람들이 문법을 배우는 과정에서 디버깅을 가볍게 생각하고 넘어가는데 디거빙은 코딩 테스트에 필요한 기술이고, 
그냥 알아 두기만 하면 되는 것이 아니라 문제를 풀면서 반드시 해야하는 과정


디버깅을 하는 방법은 
1. 코드에서 디버깅하고자 하는 줄에 중단점을 설정한다. 이때 중단점은 여러 개를 설정할 수 있다.
2. IDE의 디버깅 기능을 실행하면 코드를 1줄씩 실행하거나 다음 중단점까지 실행할 수 있으며, 
이 과정에서 추적할 변수값도 지정할 수 있다. 이 방법으로 변숫값이 자신이 의도한 대로 바뀌는지 파악한다.
3. 변수값 이외에도 원하는 수식을 입력해 논리 오류를 파악할 수 있다.
"""

# 코딩 테스트를 진행하며 실수하기 쉬운 4가지 오류 찾아보기
## 배합의 합 관련 코드

### 문제 : 배열의 주어진 범위의 합을 2로 나눈 몫을 구하세요.
import random

testcase = int(input())
answer = 0
A = [0] * (100001)

for i in range(0, 10001):
    A[i] = random.randrange(1, 101)

for i in range(1, testcase+1):
    start, end = map(int, input().split)

    for i in range(start, end+1):
        answer = answer + A[i]

    print(str(testcase) + " " + str(answer/2))

"""
오류 1. 변수 초기화 오류
첫번째 케이스를 돌고 두번째 케이스때 answer 값이 초기화 되지 않았다.

오류 2. 반복문에서 인덱스 범위 지정 오류
A list의 배열의 크기와 첫번째 for문 range 값이 다르다

오류 3. 잘못된 변수 사용 오류 (testcase)

오류 4. 파이썬 자동 형 변환 조심하기
print(str(testcase) + " " + str(answer/2)) 에서 answer의 값은 float로 변환되서 나오게 된다.

파이썬 연산 (중요)
/ 연산 : 나눗셈을 한 결과값을 float형으로 출력되며 소수점 까지 보여준다
// 연산 : 나눗셈을 한 결과값을 int형으로 출력하며 몫의 결과값만 보여준다.
% 연산 : 나눗셈을 한 후 나눈 나머지 값을 보여준다.
"""

print(5 / 2) # 2.5
print(5 // 2) # 2
print(5 % 2) # 1